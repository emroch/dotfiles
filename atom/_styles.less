/*
 * Your Stylesheet
 *
 * This stylesheet is loaded when Atom starts up and is reloaded automatically
 * when it is changed and saved.
 *
 * Add your own CSS or Less to fully customize Atom.
 * If you are unfamiliar with Less, you can read more about it here:
 * http://lesscss.org
 */


/*
 * Examples
 * (To see them, uncomment and save)
 */

// style the background color of the tree view
.tree-view {
  // background-color: whitesmoke;
}

// style the background and foreground colors on the atom-text-editor-element itself
atom-text-editor {
  // color: white;
  // background-color: hsl(180, 24%, 12%);
}

// style UI elements inside atom-text-editor
atom-text-editor .cursor {
  // border-color: red;
}

// .syntax--source.syntax-x86 {
//     .syntax--registers {
//         color: rgb(209, 154, 102);
//     }
// }

// .syntax--source.syntax--verilog {
//     @yellow:        hsl( 59, 64%, 46%);
//     @green:         hsl(122, 71%, 43%);
//     @teal:          hsl(180, 69%, 44%);
//     @blue:          hsl(197, 68%, 47%);
//     @purple:        hsl(269, 54%, 63%);
//     @lavender:      hsl(297, 40%, 52%);
//     @red:           hsl(359, 78%, 59%);
//
//     .syntax--entity.syntax--name {
//         // reset color for module declarations and instantiations
//         &.syntax--type.syntax--module,
//         &.syntax--tag.syntax--module.syntax--reference,
//         &.syntax--tag.syntax--module.syntax--identifier {
//             color: inherit;
//         }
//     }
//
//     .syntax--storage.syntax--type {
//         // color the keywords 'module' and 'endmodule' green
//         &.syntax--module {
//             color: @green;
//         }
//         // make signal types blue
//         // i.e. input, output, inout, wire, reg
//         &.syntax--signal,
//         &.syntax--parameter {
//             color: @blue;
//         }
//     }
//
//     .syntax--constant {
//         // color numeric constants purple
//         &.syntax--numeric {
//             color: @purple;
//         }
//         // color escaped charcters yellow (same as strings)
//         &.syntax--character {
//             color: @yellow;
//         }
//     }
//
//     .syntax--variable.syntax--parameter {
//         color: @lavender
//     }
//
//     .syntax--string {
//         color: @yellow;
//     }
//
//     .syntax--punctuation {
//         &.syntax--other,        // , * [ ] @
//         &.syntax--section,      // () [:]
//         &.syntax--separator,    // , :
//         &.syntax--terminator {  // ; at end of line
//             color: @red;
//         }
//     }
//
//     .syntax--keyword {
//         // color operator keywords red
//         &.syntax--operator {
//             color: @red;
//         }
//         // color general keywords blue
//         &.syntax--other {
//             color: @teal;
//             // color compiler directives yellow
//             &.syntax--compiler.syntax--directive {
//                 color: @yellow;
//             }
//         }
//     }
// }
